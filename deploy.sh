#!/bin/bash

set -e

echo "üöÄ Iniciando deploy do Laravel na Locaweb..."

# Definir diret√≥rios
ROOT_DIR=/home/cehdec1
DEPLOY_TEMP=$ROOT_DIR/deploy_temp
APP_DIR=$ROOT_DIR/app
PUBLIC_HTML=$ROOT_DIR/public_html
BACKUP_DIR=$ROOT_DIR/backups/$(date +%Y%m%d_%H%M%S)

# Criar diret√≥rio de backup
echo "üì¶ Criando backup..."
mkdir -p $BACKUP_DIR

# Backup de arquivos cr√≠ticos (exceto storage e .env que ser√£o preservados)
if [ -d "$APP_DIR" ]; then
    # Backup do .env atual
    if [ -f "$APP_DIR/.env" ]; then
        cp $APP_DIR/.env $BACKUP_DIR/.env
        echo "‚úÖ Backup do .env criado"
    fi
    
    # Backup da pasta storage (preservar uploads e arquivos)
    if [ -d "$APP_DIR/storage/app/public" ]; then
        cp -r $APP_DIR/storage/app/public $BACKUP_DIR/storage_public
        echo "‚úÖ Backup do storage criado"
    fi
fi

# Extrair arquivos novos
echo "üìÇ Extraindo arquivos novos..."
cd $DEPLOY_TEMP
tar -xzf deploy.tar.gz

# Preservar .env de produ√ß√£o
if [ -f "$BACKUP_DIR/.env" ]; then
    cp $BACKUP_DIR/.env .env
    echo "‚úÖ .env de produ√ß√£o restaurado"
fi

# Criar estrutura de diret√≥rios se n√£o existir
mkdir -p $APP_DIR

# Sincronizar arquivos (exceto storage/app/public)
echo "üîÑ Sincronizando arquivos..."
rsync -av --delete \
    --exclude='.env' \
    --exclude='storage/app/public/*' \
    --exclude='storage/framework/cache/*' \
    --exclude='storage/framework/sessions/*' \
    --exclude='storage/framework/views/*' \
    --exclude='storage/logs/*' \
    ./ $APP_DIR/

# Restaurar storage/app/public se existir backup
if [ -d "$BACKUP_DIR/storage_public" ]; then
    mkdir -p $APP_DIR/storage/app/public
    cp -r $BACKUP_DIR/storage_public/* $APP_DIR/storage/app/public/
    echo "‚úÖ Storage restaurado"
fi

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando estrutura de diret√≥rios..."
cd $APP_DIR
mkdir -p storage/framework/cache
mkdir -p storage/framework/sessions
mkdir -p storage/framework/views
mkdir -p storage/logs
mkdir -p storage/app/public
mkdir -p bootstrap/cache

# Configurar permiss√µes
echo "üîê Configurando permiss√µes..."
chmod -R 755 storage bootstrap/cache
chmod -R 775 storage/app/public

# Instalar depend√™ncias do Composer
echo "üì¶ Instalando depend√™ncias do Composer..."
php83 composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

# Criar symlink do storage se n√£o existir
if [ ! -L "$APP_DIR/public/storage" ]; then
    ln -s $APP_DIR/storage/app/public $APP_DIR/public/storage
    echo "‚úÖ Symlink do storage criado"
fi

# Criar symlink do public_html para a pasta public do Laravel
echo "üîó Criando symlink public_html ‚Üí app/public..."
cd $ROOT_DIR
# Remover public_html se for diret√≥rio comum (n√£o symlink)
if [ -d "$PUBLIC_HTML" ] && [ ! -L "$PUBLIC_HTML" ]; then
    rm -rf $PUBLIC_HTML
fi
# Criar symlink se n√£o existir
if [ ! -L "$PUBLIC_HTML" ]; then
    ln -s $APP_DIR/public $PUBLIC_HTML
    echo "‚úÖ Symlink public_html criado"
fi

# Otimiza√ß√µes do Laravel
echo "‚ö° Otimizando aplica√ß√£o..."
php83 artisan config:cache
php83 artisan route:cache
php83 artisan view:cache
php83 artisan filament:cache-components

# Executar migrations (com cuidado)
echo "üóÑÔ∏è  Executando migrations..."
php83 artisan migrate --force

# Limpar caches antigos
php83 artisan cache:clear
php83 artisan optimize:clear

echo "‚úÖ Deploy conclu√≠do com sucesso!"
echo "üìä Estat√≠sticas:"
echo "   - Backup salvo em: $BACKUP_DIR"
echo "   - Aplica√ß√£o em: $APP_DIR"
echo "   - Public HTML: $PUBLIC_HTML ‚Üí $APP_DIR/public"
echo "   - Storage preservado: ‚úÖ"
echo "   - .env preservado: ‚úÖ"
